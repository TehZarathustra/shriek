(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"I:\\EveryD front-end\\166 (ya-chat)\\shriek\\app\\assets\\js\\app.jsx":[function(require,module,exports){
var app = app || {};

(function () {
  'use strict';
  var socket = io();
  var username;

// CHAT MODULE
var ChatComponent = require('../../views/components/message.jsx')(socket);

// CHANNEL LIST MODULE
var ChannelComponent = require('../../views/components/channel.jsx')(socket);

// USERS LIST
var UserComponent = require('../../views/components/user.jsx')(socket);


var Title = React.createClass({displayName: "Title",
  render: function() {
    return (
      React.createElement("div", {className: "heading"}, 
        React.createElement("h3", {className: "heading__header"}, "Shriek Chat")
      )
    );
  }
});


var ChatApp = React.createClass({displayName: "ChatApp",

    render: function () {
    var profileUser;
    var menu, main;

    profileUser = (
      React.createElement("div", {className: "profile"}, 
        React.createElement("div", {className: "profile__out"}, React.createElement("i", {className: "fa fa-sign-out fa-2x"})), 
          React.createElement("div", {className: "profile__tools"}, React.createElement("i", {className: "fa fa-cog fa-2x"})), 
          React.createElement("div", {className: "profile__img"}, 
          React.createElement("img", {src: "http://3.bp.blogspot.com/_TbnTJqaNl4U/SVVJ0Mhb4cI/AAAAAAAAANE/57QF4arMr-A/S220-s40/40x40falloutav-vb.gif"})
        )
      )
    );

    menu = (
      React.createElement("div", {className: "nav"}, 
        React.createElement(Title, null), 
        React.createElement(ChannelComponent, null), 
        React.createElement(UserComponent, null)
      )
    );

    main = (
      React.createElement("div", {className: "content"}, 
        profileUser, 
        React.createElement(ChatComponent, null)
      )
    );

    return (
      React.createElement("div", {className: "container"}, 
        menu, 
        main
      )
    );
  }
});


// askLogin component
var AskLogin = React.createClass({displayName: "AskLogin",

  componentDidMount: function() {
    socket.on('user enter', function(data) {
      if (data.status == 'ok') {
        socket.username = username;

        // i believe, there's a better way
        $('.modal').modal('hide');
      }
    });
  },

  handleNameChange: function(e) {
    this.setState({name: e.target.value});
  },

  handlePasswordChange: function(e) {
    this.setState({password: e.target.value});
  },

  handleLogin: function(e) {
    e.preventDefault();
    var warning = $('.modal-body p');
    var warningText = 'Please, fill all fields!';

    if (this.state != null && this.state.name && this.state.password) {
      socket.emit('user enter', {username: this.state.name, password: this.state.password});
    } else {
      warning.css('color', 'red');
      warning.text(warningText);
    }
  },

  render: function() {

    var login_box;

    login_box = (
      React.createElement("div", {className: "modal fade"}, 
        React.createElement("div", {className: "modal-dialog"}, 
          React.createElement("div", {className: "modal-content"}, 
              React.createElement("div", {className: "modal-header"}, 
                  React.createElement("button", {type: "button", className: "close", "data-dismiss": "modal", "aria-hidden": "true"}, "×"), 
                  React.createElement("h4", {className: "modal-title"}, "Login")
              ), 
              React.createElement("div", {className: "modal-body"}, 
                  React.createElement("p", null, "Please, specify your name and password:"), 
                  React.createElement("form", {className: "form-horizontal", onSubmit: this.handleLogin}, 
                    React.createElement("div", {className: "form-group"}, 
                      React.createElement("label", {htmlFor: "inputUsername", className: "col-sm-2 control-label"}, "Username"), 
                      React.createElement("div", {className: "col-sm-10"}, 
                        React.createElement("input", {onChange: this.handleNameChange, type: "username", className: "form-control", id: "inputUsername", placeholder: "Username"})
                      )
                    ), 
                    React.createElement("div", {className: "form-group"}, 
                      React.createElement("label", {htmlFor: "inputPassword", className: "col-sm-2 control-label"}, "Password"), 
                      React.createElement("div", {className: "col-sm-10"}, 
                        React.createElement("input", {onChange: this.handlePasswordChange, type: "password", className: "form-control", id: "inputPassword", placeholder: "Password"})
                      )
                    ), 
                    React.createElement("div", {className: "form-group"}, 
                      React.createElement("div", {className: "col-sm-offset-2 col-sm-10"}, 
                        React.createElement("button", {onClick: this.handleLogin, type: "submit", className: "btn btn-primary"}, "Sign in")
                      )
                    )
                  )
              )
          )
        )
      )
    );

    return (
      React.createElement("div", null, 
        login_box
      )
    );
  }
});

function render() {
  React.render(
    React.createElement(ChatApp, null),
    document.getElementsByClassName('layout')[0]
  );
}

render();

})();

$(function() {
  $('.modal').modal('show');
});

},{"../../views/components/channel.jsx":"I:\\EveryD front-end\\166 (ya-chat)\\shriek\\app\\views\\components\\channel.jsx","../../views/components/message.jsx":"I:\\EveryD front-end\\166 (ya-chat)\\shriek\\app\\views\\components\\message.jsx","../../views/components/user.jsx":"I:\\EveryD front-end\\166 (ya-chat)\\shriek\\app\\views\\components\\user.jsx"}],"I:\\EveryD front-end\\166 (ya-chat)\\shriek\\app\\views\\components\\channel.jsx":[function(require,module,exports){
var ChannelComponent = function(socket) {

  var ChannelsList = React.createClass({displayName: "ChannelsList",
    getInitialState: function () {
      return {
        channels: []
      };
    },
    componentDidMount: function () {
      var that = this;
      socket.on('channel list', function (data) {
        that.setState({ channels: data.channels });
      });
      socket.emit('channel list');
      socket.on('channel get', function (data) {
        console.log('change chat room');
        // React.ChatBox.setState({messages: data.messages});
      });
    },
    changeChannel: function(event) {
      socket.emit('channel get', {channel: event.target.dataset.slug, date: new Date()});
    },
    render: function () {
      var Channels = (React.createElement("div", null, "Loading channels..."));
      var that = this;
      if (this.state.channels) {
        Channels = this.state.channels.map(function (channel) {
          return (React.createElement(Channel, {channel: channel, changeChannel: that.changeChannel}));
        });
      }
      return (
        React.createElement("div", {className: "group"}, 
          React.createElement("div", {className: "heading heading_group"}, 
            React.createElement("h3", {className: "heading__header"}, "Каналы"), 
            React.createElement("span", {className: "heading__plus"}, React.createElement("i", {class: "fa fa-plus-square-o fa-lg"}))
          ), 
          React.createElement("ul", {className: "list list_channels"}, 
            Channels
          ), 
          React.createElement(MoreChannels, null)
        )
      );
    }
  });

  var Channel = React.createClass({displayName: "Channel",
    clickHandler: function(event) {
      this.props.changeChannel(event);
    },
    render: function () {
      return (
        React.createElement("li", {className: "list__item"}, 
          React.createElement("a", {className: "name", onClick: this.clickHandler, "data-slug": this.props.channel.slug}, this.props.channel.name)
        )
      );
    }
  });

  var MoreChannels = React.createClass({displayName: "MoreChannels",
    render: function() {
      return (
        React.createElement("div", {className: "more"}, 
          React.createElement("span", null, "Показать +7")
        )
      );
    }
  });

  return ChannelsList
};

module.exports = ChannelComponent;

},{}],"I:\\EveryD front-end\\166 (ya-chat)\\shriek\\app\\views\\components\\message.jsx":[function(require,module,exports){
var ChatComponent = function(socket) {

  var ChatBox = React.createClass({displayName: "ChatBox",
    getInitialState: function () {
      return {
        messages: []
      };
    },
    componentDidMount: function () {
      var that = this;
      socket.on('message send', function (data) {
        var messagesAll = that.state.messages.slice();
        messagesAll.push(data.message);
        that.setState({ messages: messagesAll });
      });
      socket.emit('channel get', {channel: 'general', date: new Date()});
    },
    submitMessage: function (text, callback) {
      var message = {
        username: socket.username,
        channel: 'general',
        text: text,
        type: 'text'
      };
      socket.emit('message send', message);
      callback();
    },
    render: function() {
      return (
        React.createElement("div", {className: "msg"}, 
          React.createElement(MessagesList, {messages: this.state.messages}), 
          React.createElement(MessageForm, {submitMessage: this.submitMessage})
        )
      );
    }
  });

  var MessagesList = React.createClass({displayName: "MessagesList",
    render: function () {
      var Messages = (React.createElement("div", null, "Loading messages..."));
      if (this.props.messages) {
        Messages = this.props.messages.map(function (message) {
          return (React.createElement(Message, {message: message}));
        });
      }
      return (
        React.createElement("div", {className: "msg__list"}, 
          Messages
        )
      );
    }
  });

  var Message = React.createClass({displayName: "Message",
    render: function () {
      return (
        React.createElement("div", {className: "msg__item"}, 
          React.createElement("span", {className: "msg__author"}, this.props.message.username, ": "), React.createElement("span", {className: "msg__text"}, this.props.message.text)
        )
      );
    }
  });

  var MessageForm = React.createClass({displayName: "MessageForm",
    handleSubmit: function (e) {
      e.preventDefault();
      var that = this; // чтобы потом найти текстовое поле
      var text = this.refs.text.getDOMNode().value; // получаем текст
      var submitButton = this.refs.submitButton.getDOMNode(); // получаем кнопку
      submitButton.innerHTML = 'Posting message...'; // отключаем кнопку и меняем текст
      submitButton.setAttribute('disabled', 'disabled');
      this.props.submitMessage(text, function (err) { // вызываем submitMessage, передаем колбек
        that.refs.text.getDOMNode().value = '';
        submitButton.innerHTML = 'Post message';
        submitButton.removeAttribute('disabled');
      });
    },
    render: function () {
      return (
        React.createElement("div", {className: "send"}, 
          React.createElement("form", {className: "send__form", onSubmit: this.handleSubmit}, 
            React.createElement("input", {className: "send__text", name: "text", ref: "text", placeholder: "Сообщение", required: true}), 
            React.createElement("button", {type: "submit", className: "hidden", ref: "submitButton"}, "Post message")
          )
        )
      );
    }
  });

  return ChatBox;
};

module.exports = ChatComponent;

},{}],"I:\\EveryD front-end\\166 (ya-chat)\\shriek\\app\\views\\components\\user.jsx":[function(require,module,exports){
var UserComponent = function(socket) {

  var UsersList = React.createClass({displayName: "UsersList",

    render: function() {
      return (
        React.createElement("div", {className: "group"}, 
          React.createElement("div", {className: "heading heading_group"}, 
            React.createElement("h3", {className: "heading__header"}, "Пользователи")
          ), 
          React.createElement("ul", {className: "list list_users"}, 
            React.createElement(User, null)
          ), 
          React.createElement(MoreUsers, null)
        )
      );
    }

  });

  var User = React.createClass({displayName: "User",
    render: function() {
      return (
        React.createElement("li", {className: "list__item list__item_active"}, 
          React.createElement("a", {className: "name"}, "User")
        )
      );
    }
  });

  var MoreUsers = React.createClass({displayName: "MoreUsers",
    render: function() {
      return (
        React.createElement("div", {className: "more"}, 
        React.createElement("span", null, "Показать +15")
        )
      );
    }
  });

  return UsersList;
};

module.exports = UserComponent;

},{}]},{},["I:\\EveryD front-end\\166 (ya-chat)\\shriek\\app\\assets\\js\\app.jsx"])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJJOlxcRXZlcnlEIGZyb250LWVuZFxcMTY2ICh5YS1jaGF0KVxcc2hyaWVrXFxhcHBcXGFzc2V0c1xcanNcXGFwcC5qc3giLCJJOlxcRXZlcnlEIGZyb250LWVuZFxcMTY2ICh5YS1jaGF0KVxcc2hyaWVrXFxhcHBcXHZpZXdzXFxjb21wb25lbnRzXFxjaGFubmVsLmpzeCIsIkk6XFxFdmVyeUQgZnJvbnQtZW5kXFwxNjYgKHlhLWNoYXQpXFxzaHJpZWtcXGFwcFxcdmlld3NcXGNvbXBvbmVudHNcXG1lc3NhZ2UuanN4IiwiSTpcXEV2ZXJ5RCBmcm9udC1lbmRcXDE2NiAoeWEtY2hhdClcXHNocmlla1xcYXBwXFx2aWV3c1xcY29tcG9uZW50c1xcdXNlci5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQSxJQUFJLEdBQUcsR0FBRyxHQUFHLElBQUksRUFBRSxDQUFDOztBQUVwQixDQUFDLFlBQVk7RUFDWCxZQUFZLENBQUM7RUFDYixJQUFJLE1BQU0sR0FBRyxFQUFFLEVBQUUsQ0FBQztBQUNwQixFQUFFLElBQUksUUFBUSxDQUFDO0FBQ2Y7O0FBRUEsSUFBSSxhQUFhLEdBQUcsT0FBTyxDQUFDLG9DQUFvQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDMUU7O0FBRUEsSUFBSSxnQkFBZ0IsR0FBRyxPQUFPLENBQUMsb0NBQW9DLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUM3RTs7QUFFQSxJQUFJLGFBQWEsR0FBRyxPQUFPLENBQUMsaUNBQWlDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUN2RTs7QUFFQSxJQUFJLDJCQUEyQixxQkFBQTtFQUM3QixNQUFNLEVBQUUsV0FBVztJQUNqQjtNQUNFLG9CQUFBLEtBQUksRUFBQSxDQUFBLENBQUMsU0FBQSxFQUFTLENBQUMsU0FBVSxDQUFBLEVBQUE7UUFDdkIs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QU8sQ0FBQSxFQUFBO1FBQ3RCLG9CQUFBLE1BQUssRUFBQSxJQUFDLEVBQUEsY0FBbUIsQ0FBQTtRQUNuQixDQUFBO1FBQ047S0FDSDtBQUNMLEdBQUcsQ0FBQyxDQUFDOztFQUVILE9BQU8sU0FBUyxDQUFDO0FBQ25CLENBQUMsQ0FBQzs7QUFFRixNQUFNLENBQUMsT0FBTyxHQUFHLGFBQWEsQ0FBQyIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJ2YXIgYXBwID0gYXBwIHx8IHt9O1xuXG4oZnVuY3Rpb24gKCkge1xuICAndXNlIHN0cmljdCc7XG4gIHZhciBzb2NrZXQgPSBpbygpO1xuICB2YXIgdXNlcm5hbWU7XG5cbi8vIENIQVQgTU9EVUxFXG52YXIgQ2hhdENvbXBvbmVudCA9IHJlcXVpcmUoJy4uLy4uL3ZpZXdzL2NvbXBvbmVudHMvbWVzc2FnZS5qc3gnKShzb2NrZXQpO1xuXG4vLyBDSEFOTkVMIExJU1QgTU9EVUxFXG52YXIgQ2hhbm5lbENvbXBvbmVudCA9IHJlcXVpcmUoJy4uLy4uL3ZpZXdzL2NvbXBvbmVudHMvY2hhbm5lbC5qc3gnKShzb2NrZXQpO1xuXG4vLyBVU0VSUyBMSVNUXG52YXIgVXNlckNvbXBvbmVudCA9IHJlcXVpcmUoJy4uLy4uL3ZpZXdzL2NvbXBvbmVudHMvdXNlci5qc3gnKShzb2NrZXQpO1xuXG5cbnZhciBUaXRsZSA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJoZWFkaW5nXCI+XG4gICAgICAgIDxoMyBjbGFzc05hbWU9XCJoZWFkaW5nX19oZWFkZXJcIj5TaHJpZWsgQ2hhdDwvaDM+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59KTtcblxuXG52YXIgQ2hhdEFwcCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcblxuICAgIHJlbmRlcjogZnVuY3Rpb24gKCkge1xuICAgIHZhciBwcm9maWxlVXNlcjtcbiAgICB2YXIgbWVudSwgbWFpbjtcblxuICAgIHByb2ZpbGVVc2VyID0gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9J3Byb2ZpbGUnPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInByb2ZpbGVfX291dFwiPjxpIGNsYXNzTmFtZT1cImZhIGZhLXNpZ24tb3V0IGZhLTJ4XCI+PC9pPjwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHJvZmlsZV9fdG9vbHNcIj48aSBjbGFzc05hbWU9XCJmYSBmYS1jb2cgZmEtMnhcIj48L2k+PC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwcm9maWxlX19pbWdcIj5cbiAgICAgICAgICA8aW1nIHNyYz1cImh0dHA6Ly8zLmJwLmJsb2dzcG90LmNvbS9fVGJuVEpxYU5sNFUvU1ZWSjBNaGI0Y0kvQUFBQUFBQUFBTkUvNTdRRjRhck1yLUEvUzIyMC1zNDAvNDB4NDBmYWxsb3V0YXYtdmIuZ2lmXCIvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG5cbiAgICBtZW51ID0gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9J25hdic+XG4gICAgICAgIDxUaXRsZS8+XG4gICAgICAgIDxDaGFubmVsQ29tcG9uZW50Lz5cbiAgICAgICAgPFVzZXJDb21wb25lbnQvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcblxuICAgIG1haW4gPSAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRlbnRcIj5cbiAgICAgICAge3Byb2ZpbGVVc2VyfVxuICAgICAgICA8Q2hhdENvbXBvbmVudC8+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyXCI+XG4gICAgICAgIHttZW51fVxuICAgICAgICB7bWFpbn1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn0pO1xuXG5cbi8vIGFza0xvZ2luIGNvbXBvbmVudFxudmFyIEFza0xvZ2luID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuXG4gIGNvbXBvbmVudERpZE1vdW50OiBmdW5jdGlvbigpIHtcbiAgICBzb2NrZXQub24oJ3VzZXIgZW50ZXInLCBmdW5jdGlvbihkYXRhKSB7XG4gICAgICBpZiAoZGF0YS5zdGF0dXMgPT0gJ29rJykge1xuICAgICAgICBzb2NrZXQudXNlcm5hbWUgPSB1c2VybmFtZTtcblxuICAgICAgICAvLyBpIGJlbGlldmUsIHRoZXJlJ3MgYSBiZXR0ZXIgd2F5XG4gICAgICAgICQoJy5tb2RhbCcpLm1vZGFsKCdoaWRlJyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0sXG5cbiAgaGFuZGxlTmFtZUNoYW5nZTogZnVuY3Rpb24oZSkge1xuICAgIHRoaXMuc2V0U3RhdGUoe25hbWU6IGUudGFyZ2V0LnZhbHVlfSk7XG4gIH0sXG5cbiAgaGFuZGxlUGFzc3dvcmRDaGFuZ2U6IGZ1bmN0aW9uKGUpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtwYXNzd29yZDogZS50YXJnZXQudmFsdWV9KTtcbiAgfSxcblxuICBoYW5kbGVMb2dpbjogZnVuY3Rpb24oZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB2YXIgd2FybmluZyA9ICQoJy5tb2RhbC1ib2R5IHAnKTtcbiAgICB2YXIgd2FybmluZ1RleHQgPSAnUGxlYXNlLCBmaWxsIGFsbCBmaWVsZHMhJztcblxuICAgIGlmICh0aGlzLnN0YXRlICE9IG51bGwgJiYgdGhpcy5zdGF0ZS5uYW1lICYmIHRoaXMuc3RhdGUucGFzc3dvcmQpIHtcbiAgICAgIHNvY2tldC5lbWl0KCd1c2VyIGVudGVyJywge3VzZXJuYW1lOiB0aGlzLnN0YXRlLm5hbWUsIHBhc3N3b3JkOiB0aGlzLnN0YXRlLnBhc3N3b3JkfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHdhcm5pbmcuY3NzKCdjb2xvcicsICdyZWQnKTtcbiAgICAgIHdhcm5pbmcudGV4dCh3YXJuaW5nVGV4dCk7XG4gICAgfVxuICB9LFxuXG4gIHJlbmRlcjogZnVuY3Rpb24oKSB7XG5cbiAgICB2YXIgbG9naW5fYm94O1xuXG4gICAgbG9naW5fYm94ID0gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9J21vZGFsIGZhZGUnPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbW9kYWwtZGlhbG9nJz5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbW9kYWwtY29udGVudCc+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdtb2RhbC1oZWFkZXInPlxuICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSdidXR0b24nIGNsYXNzTmFtZT0nY2xvc2UnIGRhdGEtZGlzbWlzcz0nbW9kYWwnIGFyaWEtaGlkZGVuPSd0cnVlJz4mdGltZXM7PC9idXR0b24+XG4gICAgICAgICAgICAgICAgICA8aDQgY2xhc3NOYW1lPSdtb2RhbC10aXRsZSc+TG9naW48L2g0PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J21vZGFsLWJvZHknPlxuICAgICAgICAgICAgICAgICAgPHA+UGxlYXNlLCBzcGVjaWZ5IHlvdXIgbmFtZSBhbmQgcGFzc3dvcmQ6PC9wPlxuICAgICAgICAgICAgICAgICAgPGZvcm0gY2xhc3NOYW1lPVwiZm9ybS1ob3Jpem9udGFsXCIgb25TdWJtaXQ9e3RoaXMuaGFuZGxlTG9naW59PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm0tZ3JvdXBcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cImlucHV0VXNlcm5hbWVcIiBjbGFzc05hbWU9XCJjb2wtc20tMiBjb250cm9sLWxhYmVsXCI+VXNlcm5hbWU8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLXNtLTEwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgb25DaGFuZ2U9e3RoaXMuaGFuZGxlTmFtZUNoYW5nZX0gdHlwZT1cInVzZXJuYW1lXCIgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sXCIgaWQ9XCJpbnB1dFVzZXJuYW1lXCIgcGxhY2Vob2xkZXI9XCJVc2VybmFtZVwiLz5cbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1ncm91cFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwiaW5wdXRQYXNzd29yZFwiIGNsYXNzTmFtZT1cImNvbC1zbS0yIGNvbnRyb2wtbGFiZWxcIj5QYXNzd29yZDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtc20tMTBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBvbkNoYW5nZT17dGhpcy5oYW5kbGVQYXNzd29yZENoYW5nZX0gdHlwZT1cInBhc3N3b3JkXCIgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sXCIgaWQ9XCJpbnB1dFBhc3N3b3JkXCIgcGxhY2Vob2xkZXI9XCJQYXNzd29yZFwiLz5cbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9ybS1ncm91cFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLXNtLW9mZnNldC0yIGNvbC1zbS0xMFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLmhhbmRsZUxvZ2lufSB0eXBlPVwic3VibWl0XCIgY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5XCI+U2lnbiBpbjwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDwvZm9ybT5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKTtcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICB7bG9naW5fYm94fVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufSk7XG5cbmZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgUmVhY3QucmVuZGVyKFxuICAgIDxDaGF0QXBwLz4sXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnbGF5b3V0JylbMF1cbiAgKTtcbn1cblxucmVuZGVyKCk7XG5cbn0pKCk7XG5cbiQoZnVuY3Rpb24oKSB7XG4gICQoJy5tb2RhbCcpLm1vZGFsKCdzaG93Jyk7XG59KTtcbiIsInZhciBDaGFubmVsQ29tcG9uZW50ID0gZnVuY3Rpb24oc29ja2V0KSB7XG5cbiAgdmFyIENoYW5uZWxzTGlzdCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICBnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNoYW5uZWxzOiBbXVxuICAgICAgfTtcbiAgICB9LFxuICAgIGNvbXBvbmVudERpZE1vdW50OiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICBzb2NrZXQub24oJ2NoYW5uZWwgbGlzdCcsIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIHRoYXQuc2V0U3RhdGUoeyBjaGFubmVsczogZGF0YS5jaGFubmVscyB9KTtcbiAgICAgIH0pO1xuICAgICAgc29ja2V0LmVtaXQoJ2NoYW5uZWwgbGlzdCcpO1xuICAgICAgc29ja2V0Lm9uKCdjaGFubmVsIGdldCcsIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdjaGFuZ2UgY2hhdCByb29tJyk7XG4gICAgICAgIC8vIFJlYWN0LkNoYXRCb3guc2V0U3RhdGUoe21lc3NhZ2VzOiBkYXRhLm1lc3NhZ2VzfSk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGNoYW5nZUNoYW5uZWw6IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICBzb2NrZXQuZW1pdCgnY2hhbm5lbCBnZXQnLCB7Y2hhbm5lbDogZXZlbnQudGFyZ2V0LmRhdGFzZXQuc2x1ZywgZGF0ZTogbmV3IERhdGUoKX0pO1xuICAgIH0sXG4gICAgcmVuZGVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgQ2hhbm5lbHMgPSAoPGRpdj5Mb2FkaW5nIGNoYW5uZWxzLi4uPC9kaXY+KTtcbiAgICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICAgIGlmICh0aGlzLnN0YXRlLmNoYW5uZWxzKSB7XG4gICAgICAgIENoYW5uZWxzID0gdGhpcy5zdGF0ZS5jaGFubmVscy5tYXAoZnVuY3Rpb24gKGNoYW5uZWwpIHtcbiAgICAgICAgICByZXR1cm4gKDxDaGFubmVsIGNoYW5uZWw9e2NoYW5uZWx9IGNoYW5nZUNoYW5uZWw9e3RoYXQuY2hhbmdlQ2hhbm5lbH0vPik7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJncm91cFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVhZGluZyBoZWFkaW5nX2dyb3VwXCI+XG4gICAgICAgICAgICA8aDMgY2xhc3NOYW1lPVwiaGVhZGluZ19faGVhZGVyXCI+0JrQsNC90LDQu9GLPC9oMz5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImhlYWRpbmdfX3BsdXNcIj48aSBjbGFzcz1cImZhIGZhLXBsdXMtc3F1YXJlLW8gZmEtbGdcIj48L2k+PC9zcGFuPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJsaXN0IGxpc3RfY2hhbm5lbHNcIj5cbiAgICAgICAgICAgIHtDaGFubmVsc31cbiAgICAgICAgICA8L3VsPlxuICAgICAgICAgIDxNb3JlQ2hhbm5lbHMgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICAgIH1cbiAgfSk7XG5cbiAgdmFyIENoYW5uZWwgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgY2xpY2tIYW5kbGVyOiBmdW5jdGlvbihldmVudCkge1xuICAgICAgdGhpcy5wcm9wcy5jaGFuZ2VDaGFubmVsKGV2ZW50KTtcbiAgICB9LFxuICAgIHJlbmRlcjogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGxpIGNsYXNzTmFtZT1cImxpc3RfX2l0ZW1cIj5cbiAgICAgICAgICA8YSBjbGFzc05hbWU9XCJuYW1lXCIgb25DbGljaz17dGhpcy5jbGlja0hhbmRsZXJ9IGRhdGEtc2x1Zz17dGhpcy5wcm9wcy5jaGFubmVsLnNsdWd9Pnt0aGlzLnByb3BzLmNoYW5uZWwubmFtZX08L2E+XG4gICAgICAgIDwvbGk+XG4gICAgICApO1xuICAgIH1cbiAgfSk7XG5cbiAgdmFyIE1vcmVDaGFubmVscyA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb3JlXCI+XG4gICAgICAgICAgPHNwYW4+0J/QvtC60LDQt9Cw0YLRjCArNzwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIENoYW5uZWxzTGlzdFxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBDaGFubmVsQ29tcG9uZW50O1xuIiwidmFyIENoYXRDb21wb25lbnQgPSBmdW5jdGlvbihzb2NrZXQpIHtcblxuICB2YXIgQ2hhdEJveCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICBnZXRJbml0aWFsU3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG1lc3NhZ2VzOiBbXVxuICAgICAgfTtcbiAgICB9LFxuICAgIGNvbXBvbmVudERpZE1vdW50OiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICBzb2NrZXQub24oJ21lc3NhZ2Ugc2VuZCcsIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIHZhciBtZXNzYWdlc0FsbCA9IHRoYXQuc3RhdGUubWVzc2FnZXMuc2xpY2UoKTtcbiAgICAgICAgbWVzc2FnZXNBbGwucHVzaChkYXRhLm1lc3NhZ2UpO1xuICAgICAgICB0aGF0LnNldFN0YXRlKHsgbWVzc2FnZXM6IG1lc3NhZ2VzQWxsIH0pO1xuICAgICAgfSk7XG4gICAgICBzb2NrZXQuZW1pdCgnY2hhbm5lbCBnZXQnLCB7Y2hhbm5lbDogJ2dlbmVyYWwnLCBkYXRlOiBuZXcgRGF0ZSgpfSk7XG4gICAgfSxcbiAgICBzdWJtaXRNZXNzYWdlOiBmdW5jdGlvbiAodGV4dCwgY2FsbGJhY2spIHtcbiAgICAgIHZhciBtZXNzYWdlID0ge1xuICAgICAgICB1c2VybmFtZTogc29ja2V0LnVzZXJuYW1lLFxuICAgICAgICBjaGFubmVsOiAnZ2VuZXJhbCcsXG4gICAgICAgIHRleHQ6IHRleHQsXG4gICAgICAgIHR5cGU6ICd0ZXh0J1xuICAgICAgfTtcbiAgICAgIHNvY2tldC5lbWl0KCdtZXNzYWdlIHNlbmQnLCBtZXNzYWdlKTtcbiAgICAgIGNhbGxiYWNrKCk7XG4gICAgfSxcbiAgICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtc2dcIj5cbiAgICAgICAgICA8TWVzc2FnZXNMaXN0IG1lc3NhZ2VzPXt0aGlzLnN0YXRlLm1lc3NhZ2VzfS8+XG4gICAgICAgICAgPE1lc3NhZ2VGb3JtIHN1Ym1pdE1lc3NhZ2U9e3RoaXMuc3VibWl0TWVzc2FnZX0vPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICk7XG4gICAgfVxuICB9KTtcblxuICB2YXIgTWVzc2FnZXNMaXN0ID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgIHJlbmRlcjogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIE1lc3NhZ2VzID0gKDxkaXY+TG9hZGluZyBtZXNzYWdlcy4uLjwvZGl2Pik7XG4gICAgICBpZiAodGhpcy5wcm9wcy5tZXNzYWdlcykge1xuICAgICAgICBNZXNzYWdlcyA9IHRoaXMucHJvcHMubWVzc2FnZXMubWFwKGZ1bmN0aW9uIChtZXNzYWdlKSB7XG4gICAgICAgICAgcmV0dXJuICg8TWVzc2FnZSBtZXNzYWdlPXttZXNzYWdlfSAvPik7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtc2dfX2xpc3RcIj5cbiAgICAgICAgICB7TWVzc2FnZXN9XG4gICAgICAgIDwvZGl2PlxuICAgICAgKTtcbiAgICB9XG4gIH0pO1xuXG4gIHZhciBNZXNzYWdlID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgIHJlbmRlcjogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtc2dfX2l0ZW1cIj5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJtc2dfX2F1dGhvclwiPnt0aGlzLnByb3BzLm1lc3NhZ2UudXNlcm5hbWV9OiA8L3NwYW4+PHNwYW4gY2xhc3NOYW1lPVwibXNnX190ZXh0XCI+e3RoaXMucHJvcHMubWVzc2FnZS50ZXh0fTwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICAgIH1cbiAgfSk7XG5cbiAgdmFyIE1lc3NhZ2VGb3JtID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuICAgIGhhbmRsZVN1Ym1pdDogZnVuY3Rpb24gKGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHZhciB0aGF0ID0gdGhpczsgLy8g0YfRgtC+0LHRiyDQv9C+0YLQvtC8INC90LDQudGC0Lgg0YLQtdC60YHRgtC+0LLQvtC1INC/0L7Qu9C1XG4gICAgICB2YXIgdGV4dCA9IHRoaXMucmVmcy50ZXh0LmdldERPTU5vZGUoKS52YWx1ZTsgLy8g0L/QvtC70YPRh9Cw0LXQvCDRgtC10LrRgdGCXG4gICAgICB2YXIgc3VibWl0QnV0dG9uID0gdGhpcy5yZWZzLnN1Ym1pdEJ1dHRvbi5nZXRET01Ob2RlKCk7IC8vINC/0L7Qu9GD0YfQsNC10Lwg0LrQvdC+0L/QutGDXG4gICAgICBzdWJtaXRCdXR0b24uaW5uZXJIVE1MID0gJ1Bvc3RpbmcgbWVzc2FnZS4uLic7IC8vINC+0YLQutC70Y7Rh9Cw0LXQvCDQutC90L7Qv9C60YMg0Lgg0LzQtdC90Y/QtdC8INGC0LXQutGB0YJcbiAgICAgIHN1Ym1pdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgJ2Rpc2FibGVkJyk7XG4gICAgICB0aGlzLnByb3BzLnN1Ym1pdE1lc3NhZ2UodGV4dCwgZnVuY3Rpb24gKGVycikgeyAvLyDQstGL0LfRi9Cy0LDQtdC8IHN1Ym1pdE1lc3NhZ2UsINC/0LXRgNC10LTQsNC10Lwg0LrQvtC70LHQtdC6XG4gICAgICAgIHRoYXQucmVmcy50ZXh0LmdldERPTU5vZGUoKS52YWx1ZSA9ICcnO1xuICAgICAgICBzdWJtaXRCdXR0b24uaW5uZXJIVE1MID0gJ1Bvc3QgbWVzc2FnZSc7XG4gICAgICAgIHN1Ym1pdEJ1dHRvbi5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIHJlbmRlcjogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J3NlbmQnPlxuICAgICAgICAgIDxmb3JtIGNsYXNzTmFtZT1cInNlbmRfX2Zvcm1cIiBvblN1Ym1pdD17dGhpcy5oYW5kbGVTdWJtaXR9PlxuICAgICAgICAgICAgPGlucHV0IGNsYXNzTmFtZT1cInNlbmRfX3RleHRcIiBuYW1lPVwidGV4dFwiIHJlZj1cInRleHRcIiBwbGFjZWhvbGRlcj1cItCh0L7QvtCx0YnQtdC90LjQtVwiIHJlcXVpcmVkIC8+XG4gICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJzdWJtaXRcIiBjbGFzc05hbWU9XCJoaWRkZW5cIiByZWY9XCJzdWJtaXRCdXR0b25cIj5Qb3N0IG1lc3NhZ2U8L2J1dHRvbj5cbiAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBDaGF0Qm94O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBDaGF0Q29tcG9uZW50O1xuIiwidmFyIFVzZXJDb21wb25lbnQgPSBmdW5jdGlvbihzb2NrZXQpIHtcblxuICB2YXIgVXNlcnNMaXN0ID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuXG4gICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JvdXBcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlYWRpbmcgaGVhZGluZ19ncm91cFwiPlxuICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT1cImhlYWRpbmdfX2hlYWRlclwiPtCf0L7Qu9GM0LfQvtCy0LDRgtC10LvQuDwvaDM+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPHVsIGNsYXNzTmFtZT1cImxpc3QgbGlzdF91c2Vyc1wiPlxuICAgICAgICAgICAgPFVzZXIvPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgPE1vcmVVc2Vycy8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKTtcbiAgICB9XG5cbiAgfSk7XG5cbiAgdmFyIFVzZXIgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG4gICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxsaSBjbGFzc05hbWU9XCJsaXN0X19pdGVtIGxpc3RfX2l0ZW1fYWN0aXZlXCI+XG4gICAgICAgICAgPGEgY2xhc3NOYW1lPVwibmFtZVwiPlVzZXI8L2E+XG4gICAgICAgIDwvbGk+XG4gICAgICApO1xuICAgIH1cbiAgfSk7XG5cbiAgdmFyIE1vcmVVc2VycyA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcbiAgICByZW5kZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb3JlXCI+XG4gICAgICAgIDxzcGFuPtCf0L7QutCw0LfQsNGC0YwgKzE1PC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICk7XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gVXNlcnNMaXN0O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBVc2VyQ29tcG9uZW50O1xuIl19
